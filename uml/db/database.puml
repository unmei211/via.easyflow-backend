@startuml
' ===== Task Module =====
package "Task Module" {
  entity "Task" {
    * taskId : BIGINT
    --
    title : VARCHAR(255)
    description : TEXT
    status : VARCHAR(50)
    createdAt : TIMESTAMP
    updatedAt : TIMESTAMP
    createdByUserId : BIGINT
    projectId : BIGINT
  }

  entity "SubTask" {
    * subtaskId : BIGINT
    --
    taskId : BIGINT
    title : VARCHAR(255)
    status : VARCHAR(50)
    createdAt : TIMESTAMP
    updatedAt : TIMESTAMP
  }

  entity "TaskHistory" {
    * taskHistoryId : BIGINT
    --
    taskId : BIGINT
    changeDate : TIMESTAMP
    changeDescription : TEXT
  }

  entity "TaskComment" {
    * taskCommentId : BIGINT
    --
    taskId : BIGINT
    userId : BIGINT
    comment : TEXT
    createdAt : TIMESTAMP
  }

  ' Внутренние связи в модуле задач
  Task ||--o{ SubTask : contains
  Task ||--o{ TaskHistory : logs
  Task ||--o{ TaskComment : has
}

' ===== User Module =====
package "User Module" {
  entity "User" {
    * userId : BIGINT
    --
    username : VARCHAR(100)
    email : VARCHAR(255)
    password : VARCHAR(255)
    createdAt : TIMESTAMP
  }

  entity "UserRole" {
    * userRoleId : BIGINT
    --
    userId : BIGINT
    role : VARCHAR(50)
    assignedAt : TIMESTAMP
  }

  ' Связь: пользователь может иметь несколько ролей
  User ||--o{ UserRole : has
}

' ===== Project Module =====
package "Project Module" {
  entity "Project" {
    * projectId : BIGINT
    --
    name : VARCHAR(255)
    description : TEXT
    createdAt : TIMESTAMP
  }

  ' Участник проекта без информации о ролях
  entity "ProjectMember" {
    * projectMemberId : BIGINT
    --
    projectId : BIGINT
    userId : BIGINT
    joinedAt : TIMESTAMP
  }

  ' Таблица ролей участника проекта, позволяющая одному участнику иметь несколько ролей
  entity "ProjectMemberRole" {
    * projectMemberRoleId : UUID
    --
    projectMemberId : UUID
    projectRoleId : UUID
    assignedAt : TIMESTAMP
  }

  entity "ProjectRole" {
    * projectRoleId : UUID
    --
    projectId: UUID
    name: VARCHAR
    description: VARCHAR
    createdAt: TIMESTAMP
    color: VARCHAR
  }

  entity ProjectOwner {
    * projectId : UUID
    --
    userId : UUID
  }

  entity DefaultProjectRole {
    * defaultRoleId : UUID
    * projectId : UUID FK
    * projectRoleId: UUID FK
  }

  Project ||--|| DefaultProjectRole

  DefaultProjectRole ||--|| ProjectRole

  Project ||--|| ProjectOwner : owns

  ProjectRole ||--o{ ProjectMemberRole

  Project ||--o{ ProjectRole : includes

  ' Связь: проект включает множество участников
  Project ||--o{ ProjectMember : includes

  ' Связь: участник проекта может иметь несколько ролей
  ProjectMember ||--o{ ProjectMemberRole : has
}

' ===== Cross-module связи =====
' Задача ссылается на пользователя, который её создал, и на проект, в рамках которого она создана
Task }o--|| User : "created_by (FK, createdByUserId)"
Task }o--|| Project : "belongs_to (FK, projectId)"

' Комментарии к задаче оставляет пользователь
TaskComment }o--|| User : "comment_by (FK, userId)"

' Члены проекта – это пользователи
ProjectMember }o--|| User : "member (FK, userId)"
ProjectOwner }o--|| User
@enduml
